name: Build and Push Siege Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 0" # Runs every Sunday at midnight UTC

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "debug": true,
              "features": {
                "containerd-snapshotter": true
              }
            }

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get latest Siege version
        id: get-version
        run: |
          LATEST_VERSION=$(curl -s https://download.joedog.org/siege/ | grep -oP 'siege-\K[0-9.]+(?=\.tar\.gz)' | sort -V | tail -n 1)
          echo "latest_version=${LATEST_VERSION}" >> "$GITHUB_ENV"
          echo "major_version=$(echo ${LATEST_VERSION} | cut -d. -f1)" >> "$GITHUB_ENV"
          echo "minor_version=$(echo ${LATEST_VERSION} | cut -d. -f1-2)" >> "$GITHUB_ENV"

      - name: Display siege version
        run: |
          echo "The latest version of Siege is ${{ env.latest_version }}"
          echo "The latest major version of Siege is ${{ env.major_version }}"
          echo "The latest minior version of Siege is ${{ env.minor_version }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build Docker image used for test
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          load: true
          tags: |
            ttyse/siege:${{ env.latest_version }}
          build-args: |
            SIEGE_VERSION=${{ env.latest_version }}

      - name: Setup Bats and bats libs
        uses: bats-core/bats-action@3.0.0
        with:
          support-path: "$HOME/.local/share/bats-support"
          assert-path: "$HOME/.local/share/bats-assert"
          detik-path: "$HOME/.local/share/detik-path"
          file-path: "$HOME/.local/share/bats-file"

      - name: Run BATS Container tests
        id: bats-container-tests
        run: |
          docker run --rm \
            -e TERM=linux \
            -e BATS_LIB_PATH=/bats \
            -v "${{ github.workspace }}/tests:/tests:ro" \
            -v "${HOME}/.local/share:/bats:ro" \
            --entrypoint=/bats/bats/bin/bats \
            ttyse/siege:${{ env.latest_version }} \
            /tests

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get docker images
        run: |
          docker images

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ttyse/siege:${{ env.latest_version }}
            ttyse/siege:${{ env.major_version }}
            ttyse/siege:${{ env.minor_version }}
            ttyse/siege:latest
          build-args: |
            SIEGE_VERSION=${{ env.latest_version }}
